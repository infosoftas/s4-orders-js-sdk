name: $(Date:yyyyMMdd).$(Rev:r)
trigger:

- main

pool: default

variables:
  pnpm_config_cache: $(Pipeline.Workspace)/.pnpm-store

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'

- task: VersionJSONFile@3
  displayName: "Update package version"
  inputs:
    Path: '$(Build.SourcesDirectory)/orders-module'
    recursion: True
    VersionNumber: '0.$(Build.BuildNumber)'
    useBuildNumberDirectly: False
    VersionRegex: '\d+\.\d+\.\d+\.\d+'
    versionForJSONFileFormat: '{1}.{2}.{3}'
    FilenamePattern: 'package.json'
    OutputVersion: 'OutputedVersion'


- script: |
    corepack enable
    corepack prepare pnpm@latest-9 --activate
    pnpm config set store-dir $(pnpm_config_cache)
  displayName: "Configure pnpm corepack"

- script: |
    pnpm install webpack webpack-cli @types/node --save-dev
    pnpm exec webpack --mode development
    pnpm pack --pack-destination dist
  displayName: 'PNPM Install and Run webpack'
  workingDirectory: $(Build.SourcesDirectory)/orders-module

- task: Npm@1
  displayName: 'Publish to registry'
  inputs:
   command: custom
   customCommand: publish --access=restricted
   publishRegistry: useFeed
   publishFeed: Internal
   workingDir: $(Build.SourcesDirectory)/orders-module
   
